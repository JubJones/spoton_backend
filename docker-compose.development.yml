version: '3.8'

services:
  # Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: spoton-backend:dev
    container_name: spoton-backend-dev
    restart: "no"
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=spoton_dev
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=spoton_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=
      - JWT_SECRET_KEY=dev_secret_key_change_in_production
      - ENCRYPTION_MASTER_KEY=dev_encryption_key_change_in_production
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port
    volumes:
      - .:/app
      - ./logs:/var/log/spoton
      - ./models:/app/models
      - ./data:/app/data
    networks:
      - spoton-dev-network
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    stdin_open: true
    tty: true

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: spoton-postgres-dev
    restart: "no"
    environment:
      - POSTGRES_USER=spoton_dev
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=spoton_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - spoton-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: spoton-redis-dev
    restart: "no"
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - spoton-dev-network

  # TimescaleDB (optional for development)
  timescale:
    image: timescale/timescaledb:latest-pg15
    container_name: spoton-timescale-dev
    restart: "no"
    environment:
      - POSTGRES_USER=spoton_dev
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=spoton_timescale_dev
    ports:
      - "5433:5432"
    volumes:
      - timescale_dev_data:/var/lib/postgresql/data
      - ./scripts/init-timescale.sql:/docker-entrypoint-initdb.d/init-timescale.sql
    networks:
      - spoton-dev-network
    profiles:
      - timescale

  # Jupyter Notebook for development
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: spoton-backend:dev
    container_name: spoton-jupyter-dev
    restart: "no"
    depends_on:
      - postgres
      - redis
    environment:
      - APP_ENV=development
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=spoton_dev
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_DB=spoton_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - ./notebooks:/app/notebooks
    networks:
      - spoton-dev-network
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    profiles:
      - jupyter

  # Test database for isolated testing
  test-postgres:
    image: postgres:15-alpine
    container_name: spoton-test-postgres
    restart: "no"
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_spotondb
    ports:
      - "5434:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    networks:
      - spoton-dev-network
    profiles:
      - testing

  # Test Redis
  test-redis:
    image: redis:7-alpine
    container_name: spoton-test-redis
    restart: "no"
    ports:
      - "6380:6379"
    volumes:
      - test_redis_data:/data
    networks:
      - spoton-dev-network
    profiles:
      - testing

networks:
  spoton-dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  timescale_dev_data:
    driver: local
  test_postgres_data:
    driver: local
  test_redis_data:
    driver: local