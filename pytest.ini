[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    security: Security tests
    performance: Performance tests
    gpu: GPU tests requiring CUDA
    slow: Slow tests (may take several minutes)
    async: Async tests
    database: Tests requiring database
    cache: Tests requiring cache
    auth: Authentication tests
    encryption: Encryption tests
    analytics: Analytics tests
    monitoring: Monitoring tests
    memory: Memory tests
    network: Network tests
    api: API tests
    e2e: End-to-end tests

# Test execution
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=5
    --durations=10
    --color=yes
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --asyncio-mode=auto

# Async test configuration
asyncio_mode = auto

# Test timeout
timeout = 300

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:torchvision.*

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */__pycache__/*
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    logger.debug
    logger.info
    pass

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml