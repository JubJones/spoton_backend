# Docker build specific
PYTORCH_VARIANT_BUILD=cpu

# --- Application Settings ---
APP_NAME="SpotOn Backend"
API_V1_PREFIX="/api/v1"
DEBUG=False

# --- Production Endpoint Control ---
# Set to false to disable specific API endpoint groups
ENABLE_ANALYTICS_ENDPOINTS=true
ENABLE_EXPORT_ENDPOINTS=true
ENABLE_AUTH_ENDPOINTS=true
ENABLE_ADMIN_ENDPOINTS=false
PRODUCTION_MODE=false

# --- Security Configuration ---
# Comma-separated list of allowed CORS origins (use your frontend URLs in production)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
# Comma-separated list of allowed host headers
ALLOWED_HOSTS=localhost,127.0.0.1
# Rate limiting - requests per minute per IP address
RATE_LIMIT_PER_MINUTE=60
# Enable security features
ENABLE_SECURITY_HEADERS=true
ENABLE_REQUEST_LOGGING=true
# Maximum request size in MB
MAX_REQUEST_SIZE_MB=10

# --- DagsHub / S3 Configuration ---

S3_ENDPOINT_URL="https://s3.dagshub.com"
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
S3_BUCKET_NAME="spoton_ml"

# --- DagsHub Configuration (if still needed for other DagsHub library features) ---
DAGSHUB_REPO_OWNER=Jwizzed
DAGSHUB_REPO_NAME=spoton_ml

# --- Local Data Directories ---
LOCAL_VIDEO_DOWNLOAD_DIR=./downloaded_videos
LOCAL_FRAME_EXTRACTION_DIR=./extracted_frames

# --- Redis Configuration ---
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# --- TimescaleDB (PostgreSQL) Configuration ---
POSTGRES_USER=${POSTGRES_USER:-spoton_user}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-spoton_password}
POSTGRES_SERVER=timescaledb
POSTGRES_PORT=5432
POSTGRES_DB=${POSTGRES_DB:-spotondb}

# --- AI Model Configuration ---
# Detector Settings
DETECTOR_TYPE="fasterrcnn"
PERSON_CLASS_ID=1
DETECTION_CONFIDENCE_THRESHOLD=0.5
DETECTION_USE_AMP=False
# Tracker Settings
TRACKER_TYPE="botsort"

# Re-ID Settings (used by tracker)
WEIGHTS_DIR="./weights"
REID_WEIGHTS_PATH="clip_market1501.pt"
TRACKER_HALF_PRECISION=False
TRACKER_PER_CLASS=False