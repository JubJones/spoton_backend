# Docker build specific
PYTORCH_VARIANT_BUILD=cpu

# --- Application Settings ---
APP_NAME="SpotOn Backend"
API_V1_PREFIX="/api/v1"
DEBUG=False # Set to True for more verbose error output during development if needed

# --- S3 Configuration (Required by config.py) ---
# For local dev, these can be dummy values if S3 isn't immediately used,
# but the app expects them to be set.
S3_BUCKET_NAME=your-s3-bucket-name
S3_ACCESS_KEY_ID=your-s3-access-key-id
S3_SECRET_ACCESS_KEY=your-s3-secret-access-key
S3_REGION_NAME=your-s3-region
# S3_ENDPOINT_URL=http://minio:9000 # Optional: For MinIO or other S3-compatible services

# --- Redis Configuration ---
REDIS_HOST=redis # Docker Compose service name
REDIS_PORT=6379
REDIS_DB=0
# REDIS_PASSWORD= # Optional

# --- TimescaleDB (PostgreSQL) Configuration ---
# These should match the values in docker-compose.yml or your custom values
POSTGRES_USER=${POSTGRES_USER:-spoton_user}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-spoton_password}
POSTGRES_SERVER=timescaledb # Docker Compose service name
POSTGRES_PORT=5432
POSTGRES_DB=${POSTGRES_DB:-spotondb}
# DATABASE_URL= # Optional: Pydantic can build this if needed, or you can set it.

# --- AI Model Configuration (examples, paths might be inside container or mounted) ---
# DETECTOR_MODEL_PATH=
# TRACKER_CONFIG_PATH=
CLIP_MODEL_NAME="ViT-B/32"

# --- Detector Specific Settings (Required by FasterRCNNDetector, will be added to config.py) ---
PERSON_CLASS_ID=1
DETECTION_CONFIDENCE_THRESHOLD=0.5
DETECTION_USE_AMP=False